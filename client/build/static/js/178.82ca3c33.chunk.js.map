{"version":3,"file":"static/js/178.82ca3c33.chunk.js","mappings":"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","sources":["common/components/Heads/DashboardHead/index.jsx","common/components/Loaders/OverlayLoader/styles.js","common/components/Loaders/OverlayLoader/index.jsx","common/components/Shared/PageHelmet/index.jsx","common/components/Shared/PaginateTable/index.jsx","common/components/Shared/Pagination/index.jsx","common/components/Shared/SidebarLink/styles.js","common/components/Shared/SidebarLink/index.jsx","common/components/Shared/Sidebar/index.jsx","common/hooks/orders/useGetOrders.js","layout/DashboardLayout/index.jsx","common/hooks/orders/useMutateOrders.js","pages/Private/Orders/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {RiAddCircleLine} from \"react-icons/ri\";\r\nimport {Spinner} from \"reactstrap\";\r\n\r\nconst DashboardHead = ({head, loading, toggleCreateModal}) => {\r\n  return (\r\n    <div className=\"dashboard-head d-flex align-items-center justify-content-between mb-4\">\r\n      <h4 className=\"mb-0 d-flex align-items-center\">\r\n        <span>{head}</span>\r\n        {loading && <Spinner size={\"sm\"} className=\"ms-2\" />}\r\n      </h4>\r\n      {toggleCreateModal && (\r\n        <RiAddCircleLine onClick={toggleCreateModal} size={40} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHead;\r\n","import styled from \"styled-components\";\r\nimport {flexCentering} from \"../../../../styles/customStyles\";\r\n\r\nexport const OverlayLoaderStyled = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 10;\r\n  ${flexCentering}\r\n  display:  ${(props) => !props.active && \"none\"};\r\n`;\r\n","import React from \"react\";\r\nimport {FadeLoader} from \"react-spinners\";\r\nimport {OverlayLoaderStyled} from \"./styles\";\r\nconst OverlayLoader = ({active}) => {\r\n  return (\r\n    <OverlayLoaderStyled active={active}>\r\n      <FadeLoader color=\"#f3f3f3\" />\r\n    </OverlayLoaderStyled>\r\n  );\r\n};\r\n\r\nexport default OverlayLoader;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\n\r\nconst PageHelmet = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n      <title>HEXA | {title}</title>\r\n      {/* <meta name=\"description\" content=\"<Page_Description>\" /> */}\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageHelmet;\r\n","import React from \"react\";\r\nimport {Table} from \"reactstrap\";\r\nimport Pagination from \"../Pagination\";\r\n\r\nconst PaginateTable = ({allItems, handlePagination, children}) => {\r\n  return (\r\n    <div className=\"paginate-table\">\r\n      <Table responsive striped size=\"sm\">\r\n        {children}\r\n      </Table>\r\n      <Pagination\r\n        pageNumbers={allItems?.paginationStatus?.numOfPages}\r\n        currentPage={allItems?.paginationStatus?.currentPage}\r\n        handlePagination={handlePagination}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginateTable;\r\n","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Pagination = ({pageNumbers = 0, handlePagination, currentPage = 0}) => {\r\n  const handlePageClick = (e) => {\r\n    handlePagination(e.selected + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pageNumbers > 1 && (\r\n        <ReactPaginate\r\n          forcePage={currentPage - 1}\r\n          breakLabel=\"...\"\r\n          nextLabel=\">>\"\r\n          onPageChange={handlePageClick}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={2}\r\n          pageCount={pageNumbers}\r\n          previousLabel=\"<<\"\r\n          containerClassName={\"pagination justify-content-center p-3\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          nextClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SidebarLinkStyled = styled.div`\r\n  cursor: pointer;\r\n  transition: all 0.5s;\r\n  background-color: white;\r\n  padding: 10px 5px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  &:hover {\r\n    background-color: rgb(247 247 247/1);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {UncontrolledTooltip} from \"reactstrap\";\r\n\r\nimport {SidebarLinkStyled} from \"./styles\";\r\n\r\nconst SidebarLink = ({Icon, name, linkUrl, handleClick}) => {\r\n  const SLink = (\r\n    <SidebarLinkStyled\r\n      id={`UncontrolledTooltip-${name}`}\r\n      onClick={handleClick ? handleClick : null}\r\n    >\r\n      <span className=\"sidebar-link-icon\">\r\n        <Icon size={21} />\r\n      </span>\r\n      <UncontrolledTooltip\r\n        className=\"sidebar-link-tooltip\"\r\n        placement=\"right\"\r\n        target={`UncontrolledTooltip-${name}`}\r\n      >\r\n        {name}\r\n      </UncontrolledTooltip>\r\n      {/* <span className=\"sidebar-link-text\">{name}</span> */}\r\n    </SidebarLinkStyled>\r\n  );\r\n  return linkUrl ? (\r\n    <LinkContainer to={linkUrl} style={{cursor: \"pointer\"}}>\r\n      {SLink}\r\n    </LinkContainer>\r\n  ) : (\r\n    <>{SLink}</>\r\n  );\r\n};\r\n\r\nexport default SidebarLink;\r\n","import React from \"react\";\r\n\r\nconst Sidebar = ({children}) => {\r\n  return (\r\n    <aside className=\"bg-light rounded d-flex flex-column gap-2 p-2 position-sticky top-0 start-0\">\r\n      {children}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getAllOrders} from \"../../../features/orders/ordersServices\";\r\nimport {resetMutationResult} from \"../../../features/orders/ordersSlice\";\r\n\r\nconst useGetOrders = (limit, page) => {\r\n  const dispatch = useDispatch();\r\n  const {allOrders, isMutation} = useSelector((state) => state.orders);\r\n\r\n  useEffect(() => {\r\n    if (isMutation.success) {\r\n      dispatch(getAllOrders({limit, page}));\r\n      dispatch(resetMutationResult());\r\n    } else {\r\n      dispatch(getAllOrders({limit, page}));\r\n    }\r\n  }, [dispatch, isMutation.success, limit, page]);\r\n  // console.log(isMutation);\r\n  return {allOrders, isMutation};\r\n};\r\nexport default useGetOrders;\r\n","import React from \"react\";\r\nimport {Col, Container, Row} from \"reactstrap\";\r\nimport SidebarLink from \"../../common/components/Shared/SidebarLink\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logout} from \"../../features/user/userSlice\";\r\nimport Sidebar from \"../../common/components/Shared/Sidebar\";\r\nimport {RiCoupon2Fill} from \"react-icons/ri\";\r\nimport {FaBoxes} from \"react-icons/fa\";\r\nimport {\r\n  MdApps,\r\n  MdAddPhotoAlternate,\r\n  MdWidgets,\r\n  MdPeopleAlt,\r\n  MdAutoAwesomeMotion,\r\n  MdLogout,\r\n} from \"react-icons/md\";\r\nconst DashboardLayout = ({children}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row className=\"position-relative\">\r\n        <Col lg={1} md={2} xs={2}>\r\n          <Sidebar>\r\n            <SidebarLink\r\n              Icon={MdAutoAwesomeMotion}\r\n              name={\"Products\"}\r\n              linkUrl={\"/admin/products\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={MdPeopleAlt}\r\n              name={\"Users\"}\r\n              linkUrl={\"/admin/users\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={FaBoxes}\r\n              name={\"Orders\"}\r\n              linkUrl={\"/admin/orders\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={RiCoupon2Fill}\r\n              name={\"Coupons\"}\r\n              linkUrl={\"/admin/coupons\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={MdWidgets}\r\n              name={\"Categories\"}\r\n              linkUrl={\"/admin/categories\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={MdAddPhotoAlternate}\r\n              name={\"Banners\"}\r\n              linkUrl={\"/admin/banners\"}\r\n            />\r\n            <SidebarLink\r\n              Icon={MdLogout}\r\n              name={\"Logout\"}\r\n              handleClick={() => dispatch(logout())}\r\n            />\r\n          </Sidebar>\r\n        </Col>\r\n        <Col lg={11} md={10} xs={10} className=\"bg-light p-3 rounded\">\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import {useDispatch} from \"react-redux\";\r\nimport {\r\n  deleteOrder,\r\n  updateOrderToPaid,\r\n  updateOrderToDelivered,\r\n} from \"../../../features/orders/ordersServices\";\r\n\r\nconst useMutateOrders = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  /*____UPDATE_ORDER_TO_PAID____*/\r\n  const handleUpdateOrderToPaid = (id) => {\r\n    dispatch(updateOrderToPaid(id));\r\n  };\r\n  /*____UPDATE_ORDER_TO_DELIVERED____*/\r\n  const handleUpdateOrderToDelivered = (id) => {\r\n    dispatch(updateOrderToDelivered(id));\r\n  };\r\n  /*____DELETE_CATEGORY____*/\r\n  const handleDeleteOrder = (id) => {\r\n    dispatch(deleteOrder(id));\r\n  };\r\n\r\n  return {\r\n    handleUpdateOrderToPaid,\r\n    handleUpdateOrderToDelivered,\r\n    handleDeleteOrder,\r\n  };\r\n};\r\nexport default useMutateOrders;\r\n","import React, {useState} from \"react\";\r\nimport {MdDelete} from \"react-icons/md\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Alert, Badge, Spinner, Table, UncontrolledTooltip} from \"reactstrap\";\r\nimport DashboardHead from \"../../../common/components/Heads/DashboardHead\";\r\nimport OverlayLoader from \"../../../common/components/Loaders/OverlayLoader\";\r\nimport PageHelmet from \"../../../common/components/Shared/PageHelmet\";\r\nimport PaginateTable from \"../../../common/components/Shared/PaginateTable\";\r\nimport Pagination from \"../../../common/components/Shared/Pagination\";\r\nimport useGetOrders from \"../../../common/hooks/orders/useGetOrders\";\r\nimport useMutateOrders from \"../../../common/hooks/orders/useMutateOrders\";\r\nimport DashboardLayout from \"../../../layout/DashboardLayout\";\r\n\r\nconst Orders = () => {\r\n  /*____ALL_ORDERS____*/\r\n  //_PAGINATION\r\n  const [page, setPage] = useState(1);\r\n  const handlePagination = (pg) => {\r\n    setPage(pg);\r\n  };\r\n  const {allOrders, isMutation} = useGetOrders(5, page);\r\n\r\n  /*____MUTATION_HANDLERS___*/\r\n  const {\r\n    handleDeleteOrder,\r\n    handleUpdateOrderToDelivered,\r\n    handleUpdateOrderToPaid,\r\n  } = useMutateOrders();\r\n\r\n  return (\r\n    <>\r\n      <PageHelmet title={\"Orders\"} />\r\n      <DashboardLayout>\r\n        <section className=\"Orders-section\">\r\n          {/*____LOADING_OVERLAY____*/}\r\n          <OverlayLoader active={isMutation?.loading} />\r\n\r\n          {/*____HEAD____*/}\r\n          <DashboardHead head={\"Orders\"} loading={allOrders.loading} />\r\n\r\n          {allOrders.loading || allOrders.orders?.length > 0 ? (\r\n            <>\r\n              {/*____ORDERS_TABLE____*/}\r\n              <PaginateTable\r\n                allItems={allOrders}\r\n                handlePagination={handlePagination}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>Order ID</th>\r\n                    <th>User</th>\r\n                    <th>Created At</th>\r\n                    <th>Payment Method</th>\r\n                    <th>Paid Status</th>\r\n                    <th>Delivered Status</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allOrders.orders.map((item) => (\r\n                    <tr key={item._id}>\r\n                      <td style={{fontSize: \"11px\"}}>\r\n                        <Link to={`/orders/${item._id}`}>{item._id}</Link>\r\n                      </td>\r\n                      <td style={{fontSize: \"11px\"}}>{item.user}</td>\r\n                      <td style={{fontSize: \"13px\"}}>\r\n                        {new Date(item.createdAt).toLocaleDateString()}\r\n                      </td>\r\n                      <td>\r\n                        {item.paymentMethod === \"cash\" ? (\r\n                          <Badge color=\"primary\" className=\"rounded\">\r\n                            {item.paymentMethod}\r\n                          </Badge>\r\n                        ) : (\r\n                          <Badge color=\"info\" className=\"rounded\">\r\n                            {item.paymentMethod}\r\n                          </Badge>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {item.isPaid ? (\r\n                          <Badge color=\"success\" className=\"rounded\">\r\n                            Paid\r\n                          </Badge>\r\n                        ) : (\r\n                          <>\r\n                            <UncontrolledTooltip\r\n                              placement=\"top\"\r\n                              target=\"UncontrolledTooltipPaid\"\r\n                            >\r\n                              Update Order To Paid\r\n                            </UncontrolledTooltip>\r\n                            <Badge\r\n                              id=\"UncontrolledTooltipPaid\"\r\n                              style={{cursor: \"pointer\"}}\r\n                              color=\"danger\"\r\n                              className=\"rounded\"\r\n                              onClick={() => handleUpdateOrderToPaid(item._id)}\r\n                            >\r\n                              Unpaid\r\n                            </Badge>\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                      {/* PROGRESS */}\r\n                      <td>\r\n                        {item.isDelivered ? (\r\n                          <Badge color=\"success\" className=\"rounded\">\r\n                            Delivered\r\n                          </Badge>\r\n                        ) : (\r\n                          <>\r\n                            <UncontrolledTooltip\r\n                              placement=\"top\"\r\n                              target=\"UncontrolledTooltipDelivered\"\r\n                            >\r\n                              Update Order To Delivered\r\n                            </UncontrolledTooltip>\r\n                            <Badge\r\n                              id=\"UncontrolledTooltipDelivered\"\r\n                              style={{cursor: \"pointer\"}}\r\n                              color=\"danger\"\r\n                              className=\"rounded\"\r\n                              onClick={() =>\r\n                                handleUpdateOrderToDelivered(item._id)\r\n                              }\r\n                            >\r\n                              In progress\r\n                            </Badge>\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <MdDelete\r\n                          color=\"red\"\r\n                          size={25}\r\n                          onClick={() => handleDeleteOrder(item._id)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </PaginateTable>\r\n            </>\r\n          ) : (\r\n            <Alert>No orders Added Yet !</Alert>\r\n          )}\r\n        </section>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["head","loading","toggleCreateModal","className","size","onClick","OverlayLoaderStyled","styled","flexCentering","props","active","FadeLoader","color","title","allItems","handlePagination","children","responsive","striped","pageNumbers","paginationStatus","numOfPages","currentPage","forcePage","breakLabel","nextLabel","onPageChange","e","selected","marginPagesDisplayed","pageRangeDisplayed","pageCount","previousLabel","containerClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","SidebarLinkStyled","Icon","name","linkUrl","handleClick","SLink","id","placement","target","to","style","cursor","limit","page","dispatch","useDispatch","useSelector","state","orders","allOrders","isMutation","useEffect","success","getAllOrders","resetMutationResult","lg","md","xs","MdAutoAwesomeMotion","MdPeopleAlt","FaBoxes","RiCoupon2Fill","MdWidgets","MdAddPhotoAlternate","MdLogout","logout","handleUpdateOrderToPaid","updateOrderToPaid","handleUpdateOrderToDelivered","updateOrderToDelivered","handleDeleteOrder","deleteOrder","useState","setPage","useGetOrders","useMutateOrders","PageHelmet","DashboardLayout","OverlayLoader","DashboardHead","length","PaginateTable","pg","map","item","fontSize","Link","_id","user","Date","createdAt","toLocaleDateString","paymentMethod","isPaid","isDelivered"],"sourceRoot":""}