{"version":3,"file":"static/js/529.95b8aab8.chunk.js","mappings":"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","sources":["../node_modules/performance-now/src/performance-now.coffee","../node_modules/raf/index.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/react-time-ago/source/helpers/locale.js","../node_modules/react-time-ago/source/helpers/cache.js","../node_modules/react-time-ago/source/helpers/getVerboseDateFormatter.js","../node_modules/react-time-ago/source/helpers/date.js","../node_modules/react-time-ago/source/helpers/getTimeAgo.js","../node_modules/react-time-ago/source/Updater.js","../node_modules/react-time-ago/source/helpers/binarySearch.js","../node_modules/react-time-ago/source/Time.js","../node_modules/react-time-ago/source/PropTypes.js","../node_modules/react-time-ago/source/ReactTimeAgo.js"],"sourcesContent":["if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n","/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tconstructor() {\r\n\t\tthis.cache = {}\r\n\t}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}","import memoize from 'memoize-one'\r\n\r\nimport {\r\n\tintlDateTimeFormatSupported,\r\n\tintlDateTimeFormatSupportedLocale\r\n} from './locale.js'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst cache = new Cache()\r\n\r\nconst INTL_DATE_TIME_FORMAT_SUPPORTED = intlDateTimeFormatSupported()\r\nconst FALLBACK_VERBOSE_DATE_FORMATTER = date => date.toString()\r\n\r\n/**\r\n * Returns a verbose date formatter.\r\n * \r\n * @param {string} locale - Date formatting locale\r\n * @param {object} format - Output format\r\n * @param {string} format.day     - Day format\r\n * @param {string} format.month   - Month format\r\n * @param {string} format.year    - Year format\r\n * @param {string} format.weekday - Weekday format\r\n * @param {string} format.hour    - Hour format\r\n * @param {string} format.minute  - Minute format\r\n * @param {string} format.second  - Second format\r\n *\r\n * @returns {Function} `(date) -> string`.\r\n */\r\nfunction getVerboseDateFormatter(locales, format) {\r\n\t// Fall back to `date.toString()` for old web browsers.\r\n\t// https://caniuse.com/#search=intl\r\n\tif (!INTL_DATE_TIME_FORMAT_SUPPORTED) {\r\n\t\treturn FALLBACK_VERBOSE_DATE_FORMATTER\r\n\t}\r\n\r\n\t// If none of the `locales` are supported\r\n\t// a default system locale will be used.\r\n\tconst locale = resolveLocale(locales)\r\n\r\n\t// `Intl.DateTimeFormat` format caching key.\r\n\t// E.g. `\"{\"day\":\"numeric\",\"month\":\"short\",...}\"`.\r\n\t// Didn't benchmark what's faster:\r\n\t// creating a new `Intl.DateTimeFormat` instance\r\n\t// or stringifying a small JSON `format`.\r\n\t// Perhaps strigifying JSON `format` is faster.\r\n\tconst formatFingerprint = JSON.stringify(format)\r\n\r\n\t// Get `Intl.DateTimeFormat` instance for these `locale` and `format`.\r\n\t// (`locale` can be `undefined`, hence the `String(locale)` conversion)\r\n\tconst formatter = cache.get(String(locale), formatFingerprint) ||\r\n\t\tcache.put(String(locale), formatFingerprint, new Intl.DateTimeFormat(locale, format))\r\n\r\n\t// Return date formatter\r\n\treturn date => formatter.format(date)\r\n}\r\n\r\n// Even though `getVerboseDateFormatter()` function is called inside a\r\n// `useMemo()` hook, it's still invoked every time for different \r\n// `<ReactTimeAgo/>` elements on a page. There could be a lot of such\r\n// `<ReactTimeAgo/>` elements on a page. And `useMemo()` wouldn't speed up\r\n// the initial render. To work around that, simple argument-based memoization\r\n// is used.\r\nexport default memoize(getVerboseDateFormatter)\r\n\r\n// Caching locale resolving for optimizing pages \r\n// with a lot of `<ReactTimeAgo/>` elements (say, 100 or more).\r\n// `Intl.DateTimeFormat.supportedLocalesOf(locales)` is not instantaneous.\r\n// For example, it could be 25 milliseconds for 200 calls.\r\nconst resolvedLocales = {}\r\n\r\n/**\r\n * Resolves a list of possible locales to a single (\"best fit\") supported locale.\r\n * @param  {string[]} locales\r\n * @return {string}\r\n */\r\nfunction resolveLocale(locales) {\r\n\tconst localesFingerprint = locales.toString()\r\n\tif (resolvedLocales[localesFingerprint]) {\r\n\t\treturn resolvedLocales[localesFingerprint] \r\n\t}\r\n\treturn resolvedLocales[localesFingerprint] = intlDateTimeFormatSupportedLocale(locales)\r\n}","/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn isDate(value) ? value : new Date(value)\r\n}\r\n\r\n/**\r\n * Converts value to a timestamp.\r\n * @param {(number|Date)} value\r\n * @return {number}\r\n */\r\nexport function getTime(value) {\r\n\treturn isDate(value) ? value.getTime() : value\r\n}\r\n\r\nfunction isDate(object) {\r\n\treturn object instanceof Date || isMockedDate(object)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nexport function isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}","import TimeAgo from 'javascript-time-ago'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst TimeAgoCache = new Cache()\r\nexport default function getTimeAgo(preferredLocales, { polyfill }) {\r\n\t// `TimeAgo` instance creation is (hypothetically) assumed\r\n\t// a lengthy operation so the instances are cached and reused.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/1\r\n\tconst key = String(preferredLocales) + ':' + String(polyfill)\r\n\treturn TimeAgoCache.get(key) ||\r\n\t\tTimeAgoCache.put(key, new TimeAgo(preferredLocales, { polyfill }))\r\n}","// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch.js'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}","// \"Binary\" search in a sorted array.\r\nexport default function (array, test) {\r\n\tif (array.length === 0) {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tlet min = 0\r\n\tlet max = array.length - 1\r\n\tlet guess\r\n\r\n\twhile (min <= max) {\r\n\t\tguess = Math.floor((max + min) / 2)\r\n\r\n\t\tconst result = test(array[guess])\r\n\t\tif (result === 0) {\r\n\t\t\treturn guess\r\n\t\t}\r\n\t\telse if (result < 0) {\r\n\t\t\tmin = guess + 1\r\n\t\t\tif (min > max) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmax = guess - 1\r\n\t\t\tif (max < min) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// return -1\r\n\t// return min\r\n}","import React, { useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Time({\r\n\tdate,\r\n\tverboseDate,\r\n\ttooltip,\r\n\tchildren,\r\n\t...rest\r\n}, ref) {\r\n\tconst isoString = useMemo(() => date.toISOString(), [date])\r\n\treturn (\r\n\t\t<time\r\n\t\t\tref={ref}\r\n\t\t\t{...rest}\r\n\t\t\tdateTime={isoString}\r\n\t\t\ttitle={tooltip ? verboseDate : undefined}>\r\n\t\t\t{children}\r\n\t\t</time>\r\n\t)\r\n}\r\n\r\n// https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\r\n//\r\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\r\n// and that component required `children` be `ref`-able.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\r\n// \r\n// That component seems to only be using that `ref-`ability to check whether \r\n// the `children` element qualifies for `:focus-visible` selector.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\r\n//\r\nTime = React.forwardRef(Time)\r\n\r\nTime.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n\tverboseDate: PropTypes.string,\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types'\r\n\r\nconst {\r\n\toneOfType,\r\n\tarrayOf,\r\n\tstring,\r\n\tnumber,\r\n\tshape,\r\n\tfunc\r\n} = PropTypes\r\n\r\n// The first step isn't required to define `minTime` or `test()`.\r\nconst step = oneOfType([\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformat: func.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformat: func.isRequired\r\n\t})\r\n])\r\n\r\n// Formatting style.\r\nexport const style = oneOfType([\r\n\t// Not using `oneOf()` here, because that way\r\n\t// this package wouldn't support some hypothetical\r\n\t// new styles added to `javascript-time-ago` in some future.\r\n\tstring,\r\n\tshape({\r\n\t\tsteps: arrayOf(step).isRequired,\r\n\t\tlabels: oneOfType([\r\n\t\t\tstring,\r\n\t\t\tarrayOf(string)\r\n\t\t]).isRequired,\r\n\t\tround: string\r\n\t})\r\n])","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\nimport getVerboseDateFormatter from './helpers/getVerboseDateFormatter.js'\r\nimport { getDate } from './helpers/date.js'\r\nimport getTimeAgo from './helpers/getTimeAgo.js'\r\n\r\nimport Updater from './Updater.js'\r\nimport Time from './Time.js'\r\n\r\nimport { style as styleType } from './PropTypes.js'\r\n\r\nfunction ReactTimeAgo({\r\n\tdate,\r\n\tfuture,\r\n\ttimeStyle,\r\n\tround,\r\n\tminTimeLeft,\r\n\ttooltip,\r\n\tcomponent: Component,\r\n\t// `container` property name is deprecated, \r\n\t// use `wrapperComponent` property name instead.\r\n\tcontainer,\r\n\twrapperComponent,\r\n\twrapperProps,\r\n\tlocale,\r\n\tlocales,\r\n\tformatVerboseDate,\r\n\tverboseDateFormat,\r\n\tupdateInterval,\r\n\ttick,\r\n\tnow: nowProperty,\r\n\ttimeOffset,\r\n\tpolyfill,\r\n\t...rest\r\n}) {\r\n\t// Get the list of preferred locales.\r\n\tconst preferredLocales = useMemo(() => {\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// Add `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(TimeAgo.getDefaultLocale())\r\n\t}, [\r\n\t\tlocale,\r\n\t\tlocales\r\n\t])\r\n\r\n\t// Create `javascript-time-ago` formatter instance.\r\n\tconst timeAgo = useMemo(() => {\r\n\t\treturn getTimeAgo(preferredLocales, { polyfill })\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tpolyfill\r\n\t])\r\n\r\n\t// The date or timestamp that was passed.\r\n\t// Convert timestamp to `Date`.\r\n\tdate = useMemo(() => getDate(date), [date])\r\n\r\n\t// Formats the `date`.\r\n\tconst formatDate = useCallback(() => {\r\n\t\tlet now = (nowProperty || Date.now()) - timeOffset\r\n\t\tlet stopUpdates\r\n\t\tif (future) {\r\n\t\t\tif (now >= date.getTime()) {\r\n\t\t\t\tnow = date.getTime()\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (minTimeLeft !== undefined) {\r\n\t\t\tconst maxNow = date.getTime() - minTimeLeft * 1000\r\n\t\t\tif (now > maxNow) {\r\n\t\t\t\tnow = maxNow\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet [formattedDate, timeToNextUpdate] = timeAgo.format(date, timeStyle, {\r\n\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t})\r\n\t\tif (stopUpdates) {\r\n\t\t\ttimeToNextUpdate = INFINITY\r\n\t\t} else {\r\n\t\t\t// Legacy compatibility: there used to be an `updateInterval` property.\r\n\t\t\t// That was before `getTimeToNextUpdate` feature was introduced in `javascript-time-ago`.\r\n\t\t\t// A default interval of one minute is introduced because\r\n\t\t\t// `getTimeToNextUpdate` feature may theoretically return `undefined`.\r\n\t\t\ttimeToNextUpdate = updateInterval || timeToNextUpdate || 60 * 1000 // A minute by default.\r\n\t\t}\r\n\t\treturn [formattedDate, now + timeToNextUpdate]\r\n\t}, [\r\n\t\tdate,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tupdateInterval,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\ttimeAgo,\r\n\t\tnowProperty\r\n\t])\r\n\r\n\tconst formatDateRef = useRef()\r\n\tformatDateRef.current = formatDate\r\n\r\n\tconst [_formattedDate, _nextUpdateTime] = useMemo(formatDate, [])\r\n\tconst [formattedDate, setFormattedDate] = useState(_formattedDate)\r\n\r\n\tconst updater = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tick) {\r\n\t\t\tupdater.current = Updater.add({\r\n\t\t\t\tgetNextValue: () => formatDateRef.current(),\r\n\t\t\t\tsetValue: setFormattedDate,\r\n\t\t\t\tnextUpdateTime: _nextUpdateTime\r\n\t\t\t})\r\n\t\t\treturn () => updater.current.stop()\r\n\t\t}\r\n\t}, [tick])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (updater.current) {\r\n\t\t\tupdater.current.forceUpdate()\r\n\t\t} else {\r\n\t\t\tconst [formattedDate] = formatDate()\r\n\t\t\tsetFormattedDate(formattedDate)\r\n\t\t}\r\n\t}, [formatDate])\r\n\r\n\t// Create verbose date formatter for the tooltip text.\r\n\tconst verboseDateFormatter = useMemo(() => {\r\n\t\treturn getVerboseDateFormatter(\r\n\t\t\tpreferredLocales, \r\n\t\t\tverboseDateFormat\r\n\t\t)\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tverboseDateFormat\r\n\t])\r\n\r\n\t// Format verbose date for the tooltip.\r\n\tconst verboseDate = useMemo(() => {\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(date)\r\n\t\t}\r\n\t\treturn verboseDateFormatter(date)\r\n\t}, [\r\n\t\tdate,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormatter\r\n\t])\r\n\r\n\tconst result = (\r\n\t\t<Component\r\n\t\t\tdate={date}\r\n\t\t\tverboseDate={verboseDate}\r\n\t\t\ttooltip={tooltip}\r\n\t\t\t{...rest}>\r\n\t\t\t{formattedDate}\r\n\t\t</Component>\r\n\t)\r\n\r\n\tconst WrapperComponent = wrapperComponent || container\r\n\r\n\tif (WrapperComponent) {\r\n\t\treturn (\r\n\t\t\t<WrapperComponent\r\n\t\t\t\t{...wrapperProps}\r\n\t\t\t\tverboseDate={verboseDate}>\r\n\t\t\t\t{result}\r\n\t\t\t</WrapperComponent>\r\n\t\t)\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nReactTimeAgo.propTypes = {\r\n\t// The `date` or `timestamp`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate: PropTypes.oneOfType([\r\n\t\tPropTypes.instanceOf(Date),\r\n\t\tPropTypes.number\r\n\t]).isRequired,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale: PropTypes.string,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture: PropTypes.bool,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle: styleType,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround: PropTypes.string,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft: PropTypes.number,\r\n\r\n\t// A React component to render the relative time label.\r\n\t// Receives properties:\r\n\t// * date: Date — The date.\r\n\t// * verboseDate: string — Formatted verbose date.\r\n\t// * tooltip: boolean — The `tooltip` property of `<ReactTimeAgo/>` component.\r\n\t// * children: string — The relative time label.\r\n\t// * All \"unknown\" properties that have been passed to `<ReactTimeAgo/>` are passed through to this component.\r\n\tcomponent: PropTypes.elementType.isRequired,\r\n\r\n\t// Whether to use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\t// Is `true` by default.\r\n\t// Can be set to `false` to disable the native HTML `tooltip`.\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate: PropTypes.func,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat: PropTypes.object,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// Instead, consider using `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles.\r\n\tupdateInterval: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({\r\n\t\t\tthreshold: PropTypes.number,\r\n\t\t\tinterval: PropTypes.number.isRequired\r\n\t\t}))\r\n\t]),\r\n\r\n\t// (deprecated).\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns that off.\r\n\ttick: PropTypes.bool,\r\n\r\n\t// Allows setting a custom baseline for relative time measurement.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\tnow: PropTypes.number,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset: PropTypes.number,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\tpolyfill: PropTypes.bool,\r\n\r\n\t// (advanced)\r\n\t// A React Component to wrap the resulting `<time/>` React Element.\r\n\t// Receives `verboseDate` and `children` properties.\r\n\t// Also receives `wrapperProps`, if they're passed.\r\n\t// `verboseDate` can be used for displaying verbose date label\r\n\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t// See the \"Tooltip\" readme section for more info.\r\n\t// Another example could be having `wrapperComponent`\r\n\t// being rerendered every time the component refreshes itself.\r\n\twrapperComponent: PropTypes.elementType,\r\n\r\n\t// Custom `props` passed to `wrapperComponent`.\r\n\twrapperProps: PropTypes.object\r\n}\r\n\r\nReactTimeAgo.defaultProps = {\r\n\t// No preferred locales.\r\n\tlocales: [],\r\n\r\n\t// Use a `<time/>` tag by default.\r\n\tcomponent: Time,\r\n\r\n\t// Use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\ttooltip: true,\r\n\r\n\t// `Intl.DateTimeFormat` for verbose date.\r\n\t// Example: \"Thursday, December 20, 2012, 7:00:00 AM GMT+4\"\r\n\tverboseDateFormat: {\r\n\t\tweekday: 'long',\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tyear: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: '2-digit',\r\n\t\tsecond: '2-digit',\r\n\t\t// timeZoneName: 'short'\r\n\t},\r\n\r\n\t// Automatically refreshes itself.\r\n\ttick: true,\r\n\r\n\t// No time offset.\r\n\ttimeOffset: 0\r\n}\r\n\r\n// The component schedules a next refresh every time it renders.\r\n// There's no need to rerender this component unless its props change.\r\nReactTimeAgo = React.memo(ReactTimeAgo)\r\n\r\nexport default ReactTimeAgo\r\n\r\n// A thousand years is practically a metaphor for \"infinity\"\r\n// in the context of this component.\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nconst INFINITY = 1000 * YEAR"],"names":["performance","now","module","exports","process","hrtime","getNanoSeconds","nodeLoadTime","moduleLoadTime","hr","upTime","uptime","Date","loadTime","getTime","require","root","window","global","vendors","suffix","raf","caf","i","length","last","id","queue","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","fn","call","cancel","apply","arguments","polyfill","object","requestAnimationFrame","cancelAnimationFrame","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","first","second","intlDateTimeFormatSupported","Intl","DateTimeFormat","Cache","_classCallCheck","this","cache","keys","key","_typeof","pop","lastKey","INTL_DATE_TIME_FORMAT_SUPPORTED","FALLBACK_VERBOSE_DATE_FORMATTER","date","toString","resultFn","isEqual","memoized","newArgs","_i","lastThis","lastArgs","lastResult","clear","locales","format","locale","localesFingerprint","resolvedLocales","supportedLocalesOf","intlDateTimeFormatSupportedLocale","resolveLocale","formatFingerprint","JSON","stringify","formatter","get","String","put","isDate","isMockedDate","TimeAgoCache","instances","add","instance","wasIdle","start","stop","remove","_this","forceUpdate","updateInstance","tick","nextUpdateTime","scheduleNextTick","scheduledTick","_this2","_instance$getNextValu2","getNextValue","setValue","_updateInstance","array","test","guess","min","result","floor","binarySearch","findTargetIndex","splice","indexOf","Time","ref","verboseDate","tooltip","children","rest","isoString","useMemo","toISOString","React","dateTime","title","undefined","propTypes","PropTypes","isRequired","oneOfType","arrayOf","string","number","shape","func","step","minTime","formatAs","style","steps","labels","ReactTimeAgo","future","timeStyle","minTimeLeft","Component","component","container","wrapperComponent","wrapperProps","formatVerboseDate","verboseDateFormat","updateInterval","nowProperty","timeOffset","preferredLocales","concat","TimeAgo","timeAgo","getTimeAgo","formatDate","useCallback","stopUpdates","maxNow","_timeAgo$format2","getTimeToNextUpdate","formattedDate","timeToNextUpdate","INFINITY","formatDateRef","useRef","current","_useMemo2","_formattedDate","_nextUpdateTime","_useState2","useState","setFormattedDate","updater","useEffect","Updater","_formatDate2","verboseDateFormatter","getVerboseDateFormatter","WrapperComponent","styleType","threshold","interval","defaultProps","weekday","day","month","year","hour","minute"],"sourceRoot":""}