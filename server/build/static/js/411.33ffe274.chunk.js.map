{"version":3,"file":"static/js/411.33ffe274.chunk.js","mappings":"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","sources":["common/components/Shared/PageBreadcrumbs/index.jsx","common/components/Shared/PageHelmet/index.jsx","pages/Protected/Checkout/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"reactstrap\";\r\nconst PageBreadcrumbs = ({pages}) => {\r\n  return (\r\n    <Breadcrumb className=\"mb-4 \">\r\n      {pages.map((pg, idx) =>\r\n        !pg.isActive ? (\r\n          <BreadcrumbItem key={idx}>\r\n            <Link to={pg.link}>{pg.page}</Link>\r\n          </BreadcrumbItem>\r\n        ) : (\r\n          <BreadcrumbItem key={idx} active>\r\n            {pg.page}\r\n          </BreadcrumbItem>\r\n        )\r\n      )}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\n\r\nconst PageHelmet = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n      <title>HEXA | {title}</title>\r\n      {/* <meta name=\"description\" content=\"<Page_Description>\" /> */}\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageHelmet;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport PageHelmet from \"../../../common/components/Shared/PageHelmet\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport pushNotification from \"../../../common/components/Shared/Notification\";\r\nimport PageBreadcrumbs from \"../../../common/components/Shared/PageBreadcrumbs\";\r\nimport {createShippingAddress} from \"../../../features/address/addressSlice\";\r\nimport useUserCart from \"../../../common/hooks/cart/useUserCart\";\r\nimport paymentMethods from \"../../../assets/imgs/payment-method.png\";\r\nimport {\r\n  createCashOrder,\r\n  createCardOrder,\r\n} from \"../../../features/orders/ordersServices\";\r\nimport {\r\n  resetMutationResult,\r\n  resetSessionUrl,\r\n} from \"../../../features/orders/ordersSlice\";\r\n\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  //USER_CART\r\n  const {userCart} = useUserCart();\r\n  // console.log(userCart.cart?.cartItems.length);\r\n\r\n  //ADDRESS\r\n  const [address, setAddress] = useState(\r\n    localStorage.getItem(\"shippingAddress\")\r\n      ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n      : {\r\n          detailedAddress: \"\",\r\n          city: \"\",\r\n          phone: \"\",\r\n          postalCode: \"\",\r\n        }\r\n  );\r\n  const handleChange = (e) => {\r\n    setAddress({...address, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  //PAYMENT\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n  const handlePaymentMethod = (paymentVal) => {\r\n    setPaymentMethod(paymentVal);\r\n  };\r\n  // console.log(paymentMethod);\r\n\r\n  //ORDER\r\n  const {isMutation, sessionUrl} = useSelector((state) => state.orders);\r\n\r\n  //HANDLE_CREATE_ORDER\r\n  const handleSubmitOrder = (e) => {\r\n    //Handle-Shipping-Address\r\n    e.preventDefault();\r\n    if (\r\n      !address.detailedAddress ||\r\n      !address.city ||\r\n      !address.phone ||\r\n      !address.postalCode\r\n    ) {\r\n      pushNotification(\"Please fill all shipping address field\", \"error\");\r\n      return;\r\n    }\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(address));\r\n    dispatch(createShippingAddress(address));\r\n    //Handle-User-Cart\r\n    if (userCart.cart?.cartItems.length < 1) {\r\n      pushNotification(\"Your cart is empty\", \"error\");\r\n      setTimeout(() => {\r\n        navigate(\"/cart\");\r\n      }, 1000);\r\n      return;\r\n    }\r\n    //Handle-Payment\r\n    if (!paymentMethod) {\r\n      pushNotification(\"Please select a payment method\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (paymentMethod === \"cash\") {\r\n      dispatch(\r\n        createCashOrder({\r\n          cartId: userCart.cart?._id,\r\n          body: {shippingAddress: address},\r\n        })\r\n      );\r\n    } else if (paymentMethod === \"card\") {\r\n      dispatch(\r\n        createCardOrder({\r\n          cartId: userCart.cart?._id,\r\n          shippingAddress: address,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isMutation.loading) {\r\n      if (isMutation.success) {\r\n        if (sessionUrl) {\r\n          dispatch(resetMutationResult());\r\n          //FOR-CARD\r\n          window.location.href = sessionUrl;\r\n          dispatch(resetSessionUrl());\r\n        } else {\r\n          dispatch(resetMutationResult());\r\n          //FOR-CASH\r\n          setTimeout(() => (window.location.href = \"/orders\"), 1000);\r\n        }\r\n      }\r\n    }\r\n  }, [isMutation, dispatch, navigate, sessionUrl]);\r\n\r\n  return (\r\n    <>\r\n      <PageHelmet title={\"Checkout\"} />\r\n      <Container className=\"py-4\">\r\n        <PageBreadcrumbs\r\n          pages={[\r\n            {page: \"Home\", link: \"/\"},\r\n            {page: \"Cart\", link: \"/cart\"},\r\n            {page: \"Checkout\", isActive: true},\r\n          ]}\r\n        />\r\n        <Row>\r\n          <Col md={7}>\r\n            <h3 className=\"mb-3\">Shipping Address</h3>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"address\">Address In Details</Label>\r\n                <Input\r\n                  id=\"address\"\r\n                  name=\"detailedAddress\"\r\n                  placeholder=\"Address In Details\"\r\n                  type=\"text\"\r\n                  value={address.detailedAddress}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"city\">City</Label>\r\n                <Input\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  type=\"text\"\r\n                  value={address.city}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"phone\">Phone Number</Label>\r\n                <Input\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Phone Number\"\r\n                  type=\"text\"\r\n                  value={address.phone}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"postalCode\">Postal Code</Label>\r\n                <Input\r\n                  id=\"postalCode\"\r\n                  name=\"postalCode\"\r\n                  placeholder=\"Postal Code\"\r\n                  type=\"text\"\r\n                  value={address.postalCode}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </Col>\r\n          <Col md={4}>\r\n            <h3 className=\"mb-3\">Payment Method</h3>\r\n            <div className=\"bg-light p-3\">\r\n              <div className=\"d-flex flex-column gap-2 \">\r\n                <h5>Price</h5>\r\n                <span\r\n                  style={{\r\n                    fontFamily: \"sans-serif\",\r\n                    textDecoration: userCart.cart?.totalPriceAfterCouponDiscount\r\n                      ? \"line-through\"\r\n                      : \"none\",\r\n                    color: userCart.cart?.totalPriceAfterCouponDiscount\r\n                      ? \"gray\"\r\n                      : \"black\",\r\n                  }}\r\n                >\r\n                  Cart Subtotal : ${userCart.cart?.totalPrice}\r\n                </span>\r\n                {userCart.cart?.totalPriceAfterCouponDiscount > 0 && (\r\n                  <span>\r\n                    {\" \"}\r\n                    Cart Subtotal After Discount : $\r\n                    {userCart.cart?.totalPriceAfterCouponDiscount}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <hr />\r\n              <div className=\"d-flex flex-column gap-2\">\r\n                <h5>Payment</h5>\r\n                <Form\r\n                  className=\"d-flex flex-column gap-2\"\r\n                  onSubmit={handleSubmitOrder}\r\n                >\r\n                  <div>\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        handlePaymentMethod(e.target.value);\r\n                      }}\r\n                      type=\"radio\"\r\n                      id={\"cash\"}\r\n                      value={\"cash\"}\r\n                      name=\"payment\"\r\n                    />{\" \"}\r\n                    <Label>Cash on delivery</Label>\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        handlePaymentMethod(e.target.value);\r\n                      }}\r\n                      type=\"radio\"\r\n                      id={\"card\"}\r\n                      value={\"card\"}\r\n                      name=\"payment\"\r\n                    />{\" \"}\r\n                    <Label>Credit Card</Label>\r\n                  </div>\r\n                  <div>\r\n                    <img src={paymentMethods} alt=\"payments-img\" />\r\n                  </div>\r\n                  {isMutation.loading ? (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      block\r\n                      color=\"primary\"\r\n                      disabled\r\n                      className=\"mt-3\"\r\n                    >\r\n                      <Spinner size={\"sm\"} />\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      block\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-3\"\r\n                    >\r\n                      Place Order\r\n                    </Button>\r\n                  )}\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"names":["pages","className","map","pg","idx","isActive","active","page","Link","to","link","title","dispatch","useDispatch","navigate","useNavigate","userCart","useUserCart","useState","localStorage","getItem","JSON","parse","detailedAddress","city","phone","postalCode","address","setAddress","handleChange","e","target","name","value","paymentMethod","setPaymentMethod","handlePaymentMethod","paymentVal","useSelector","state","orders","isMutation","sessionUrl","useEffect","loading","success","resetMutationResult","window","location","href","resetSessionUrl","setTimeout","md","for","id","placeholder","type","onChange","style","fontFamily","textDecoration","cart","totalPriceAfterCouponDiscount","color","totalPrice","onSubmit","preventDefault","setItem","stringify","createShippingAddress","cartItems","length","pushNotification","createCashOrder","cartId","_id","body","shippingAddress","createCardOrder","src","paymentMethods","alt","size","block","disabled"],"sourceRoot":""}