{"version":3,"file":"static/js/796.ccd81020.chunk.js","mappings":"oIAcA,IAXoB,SAAH,GAAqB,IAAhBA,EAAS,EAATA,UACpB,OACE,gBACEC,UAAU,+DACVC,MAAO,CAACF,UAAU,GAAD,OAAKA,GAAa,IAAG,OAAM,UAE5C,SAAC,KAAO,KAGd,C,4ECSA,IAlBoB,SAAH,GAAwB,IAAnBG,EAAK,EAALA,MAAOD,EAAK,EAALA,MAC3B,GAAsCE,EAAAA,EAAAA,WAAS,GAAM,eAA9CC,EAAW,KAAEC,EAAc,KAIlC,OACE,iCACID,IAAe,SAAC,IAAW,KAC7B,gBACEE,IAAKJ,EACLK,IAAI,WACJN,OAAK,QAAGO,QAAQ,GAAD,OAAMJ,EAAuB,SAAT,SAAwBH,GAC3DQ,OAVoB,WACxBJ,GAAe,EACjB,MAYF,C,gECEA,IAlBwB,SAAH,GAAiB,IAAZK,EAAK,EAALA,MACxB,OACE,SAAC,KAAU,CAACV,UAAU,QAAO,SAC1BU,EAAMC,KAAI,SAACC,EAAIC,GAAG,OAChBD,EAAGE,UAKF,SAAC,KAAc,CAAWC,QAAM,WAC7BH,EAAGI,MADeH,IAJrB,SAAC,KAAc,WACb,SAAC,EAAAI,KAAI,CAACC,GAAIN,EAAGO,KAAK,SAAEP,EAAGI,QADJH,EAOtB,KAIT,C,sDCPA,IATmB,SAAH,GAAiB,IAAZO,EAAK,EAALA,MACnB,OACE,SAAC,KAAM,WACL,6BAAO,UAAQA,MAIrB,C,kECUA,IAfyB,SAACC,EAAOL,GAC/B,IAAMM,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAU,IAApEC,EAAa,EAAbA,cAAeC,EAAU,EAAVA,WAWtB,OATAC,EAAAA,EAAAA,YAAU,WACJD,EAAWE,SACbR,GAASS,EAAAA,EAAAA,IAAiB,CAACV,MAAAA,EAAOL,KAAAA,KAClCM,GAASU,EAAAA,EAAAA,QAETV,GAASS,EAAAA,EAAAA,IAAiB,CAACV,MAAAA,EAAOL,KAAAA,IAEtC,GAAG,CAACM,EAAUM,EAAWE,QAAST,EAAOL,IAElC,CAACW,cAAAA,EAAeC,WAAAA,EACzB,C,+JCmBA,EA/B0B,SAAH,GAAqB,IAAD,EAAfK,EAAS,EAATA,UACnBN,GAAiBO,EAAAA,EAAAA,KAAjBP,cACDD,EAAaO,EACF,OAAbN,QAAa,IAAbA,GAAyB,QAAZ,EAAbA,EAAeD,kBAAU,WAAZ,EAAb,EAA2BS,MAAM,EAAG,GACvB,OAAbR,QAAa,IAAbA,OAAa,EAAbA,EAAeD,WACnB,OACE,oBAAS1B,UAAU,qBAAoB,SACvB,OAAb2B,QAAa,IAAbA,GAAAA,EAAeS,SACd,SAACC,EAAA,EAAW,CAACtC,UAAW,MACT,OAAb4B,QAAa,IAAbA,GAAAA,EAAeW,OACjB,SAAC,KAAK,CAACC,MAAM,SAAQ,SAAe,OAAbZ,QAAa,IAAbA,OAAa,EAAbA,EAAeW,SAEtC,+BACE,SAAC,KAAG,CAACE,GAAI,EAAGC,GAAI,EAAE,SACff,EAAWf,KAAI,SAAC+B,EAAM7B,GAAG,OACxB,SAAC,KAAG,CAAWb,UAAU,OAAM,UAC7B,SAAC,EAAAiB,KAAI,CAACC,GAAE,sBAAiBwB,EAAKC,KAAM,UAClC,SAAC,IAAW,CACVzC,MAAW,OAAJwC,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,MACbD,MAAO,CAAC2C,MAAO,OAAQC,OAAQ,aAJ3BhC,EAOJ,SAOpB,ECZA,EAjBmB,WACjB,OACE,iCACE,SAACiC,EAAA,EAAU,CAAC1B,MAAO,gBACnB,UAAC,KAAS,CAACpB,UAAU,OAAM,WACzB,SAAC+C,EAAA,EAAe,CACdrC,MAAO,CACL,CAACM,KAAM,OAAQG,KAAM,KACrB,CAACH,KAAM,aAAcF,UAAU,OAGnC,SAAC,EAAiB,CAACmB,WAAW,SAItC,C","sources":["common/components/Loaders/BlockLoader/index.jsx","common/components/Loaders/ImgLoader/index.jsx","common/components/Shared/PageBreadcrumbs/index.jsx","common/components/Shared/PageHelmet/index.jsx","common/hooks/categories/useGetCategories.js","pages/Public/Categories/sections/CategoriesSection.jsx","pages/Public/Categories/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Spinner} from \"reactstrap\";\r\n\r\nconst BlockLoader = ({minHeight}) => {\r\n  return (\r\n    <div\r\n      className=\"w-100 h-100 d-flex align-items-center justify-content-center\"\r\n      style={{minHeight: `${minHeight || 160}px`}}\r\n    >\r\n      <Spinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockLoader;\r\n","import React, {useState} from \"react\";\r\nimport BlockLoader from \"../BlockLoader\";\r\n\r\nconst ImageLoader = ({image, style}) => {\r\n  const [isImgLoaded, setIsImgLoaded] = useState(false);\r\n  const handleImageLoaded = () => {\r\n    setIsImgLoaded(true);\r\n  };\r\n  return (\r\n    <>\r\n      {!isImgLoaded && <BlockLoader />}\r\n      <img\r\n        src={image}\r\n        alt=\"item-img\"\r\n        style={{display: `${!isImgLoaded ? \"none\" : \"inline\"}`, ...style}}\r\n        onLoad={handleImageLoaded}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageLoader;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"reactstrap\";\r\nconst PageBreadcrumbs = ({pages}) => {\r\n  return (\r\n    <Breadcrumb className=\"mb-4 \">\r\n      {pages.map((pg, idx) =>\r\n        !pg.isActive ? (\r\n          <BreadcrumbItem key={idx}>\r\n            <Link to={pg.link}>{pg.page}</Link>\r\n          </BreadcrumbItem>\r\n        ) : (\r\n          <BreadcrumbItem key={idx} active>\r\n            {pg.page}\r\n          </BreadcrumbItem>\r\n        )\r\n      )}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\n\r\nconst PageHelmet = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n      <title>HEXA | {title}</title>\r\n      {/* <meta name=\"description\" content=\"<Page_Description>\" /> */}\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageHelmet;\r\n","import {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAllCategories} from \"../../../features/categories/categoriesServices\";\r\nimport {resetMutationResult} from \"../../../features/categories/categoriesSlice\";\r\n\r\nconst useGetCategories = (limit, page) => {\r\n  const dispatch = useDispatch();\r\n  const {allCategories, isMutation} = useSelector((state) => state.categories);\r\n\r\n  useEffect(() => {\r\n    if (isMutation.success) {\r\n      dispatch(getAllCategories({limit, page}));\r\n      dispatch(resetMutationResult());\r\n    } else {\r\n      dispatch(getAllCategories({limit, page}));\r\n    }\r\n  }, [dispatch, isMutation.success, limit, page]);\r\n\r\n  return {allCategories, isMutation};\r\n};\r\nexport default useGetCategories;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Alert, Col, Row} from \"reactstrap\";\r\nimport BlockLoader from \"../../../../common/components/Loaders/BlockLoader\";\r\nimport ImageLoader from \"../../../../common/components/Loaders/ImgLoader\";\r\nimport useGetCategories from \"../../../../common/hooks/categories/useGetCategories\";\r\n\r\nconst CategoriesSection = ({withSlice}) => {\r\n  const {allCategories} = useGetCategories();\r\n  const categories = withSlice\r\n    ? allCategories?.categories?.slice(0, 4)\r\n    : allCategories?.categories;\r\n  return (\r\n    <section className=\"categories-section\">\r\n      {allCategories?.loading ? (\r\n        <BlockLoader minHeight={300} />\r\n      ) : allCategories?.error ? (\r\n        <Alert color=\"danger\">{allCategories?.error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Row md={4} xs={2}>\r\n            {categories.map((item, idx) => (\r\n              <Col key={idx} className=\"mb-4\">\r\n                <Link to={`/categories/${item._id}`}>\r\n                  <ImageLoader\r\n                    image={item?.image}\r\n                    style={{width: \"100%\", height: \"auto\"}}\r\n                  />\r\n                </Link>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CategoriesSection;\r\n","import React from \"react\";\r\nimport PageBreadcrumbs from \"../../../common/components/Shared/PageBreadcrumbs\";\r\nimport PageHelmet from \"../../../common/components/Shared/PageHelmet\";\r\n\r\nimport CategoriesSection from \"./sections/CategoriesSection\";\r\nimport {Container} from \"reactstrap\";\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <>\r\n      <PageHelmet title={\"Categories\"} />\r\n      <Container className=\"my-4\">\r\n        <PageBreadcrumbs\r\n          pages={[\r\n            {page: \"Home\", link: \"/\"},\r\n            {page: \"Categories\", isActive: true},\r\n          ]}\r\n        />\r\n        <CategoriesSection withSlice={false} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"],"names":["minHeight","className","style","image","useState","isImgLoaded","setIsImgLoaded","src","alt","display","onLoad","pages","map","pg","idx","isActive","active","page","Link","to","link","title","limit","dispatch","useDispatch","useSelector","state","categories","allCategories","isMutation","useEffect","success","getAllCategories","resetMutationResult","withSlice","useGetCategories","slice","loading","BlockLoader","error","color","md","xs","item","_id","width","height","PageHelmet","PageBreadcrumbs"],"sourceRoot":""}